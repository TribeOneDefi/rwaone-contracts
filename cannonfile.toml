name = "rwaone"
description = "Infinite liquidity is here."
version = "<%= package.version %>"

# overrides the deployed contracts used by the deployer
# not to be confused with the cannon network
[setting.network]
defaultValue = "local"

# contracts will be owned by the specified address (defaults to the first known test address)
[setting.owner]
defaultValue = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"

# some snx and rUSD will be minted by this address
[setting.test_user]
defaultValue = "0x48914229deDd5A9922f44441ffCCfC2Cb7856Ee9"

# how much should wRWAX be worth (6 decimals)
[setting.rate_snx]
defaultValue = "5000000"

# how much should ETH be worth (6 decimals)
[setting.rate_eth]
defaultValue = "5000000000"

# how much should BTC be worth (6 decimals)
[setting.rate_btc]
defaultValue = "50000000000"

[import.aggregator_snx]
source = "chainlink:0.7-mock"
options.rate = "<%= settings.rate_snx %>"
options.timestamp = "1558469483"
options.salt = "snx"

[import.aggregator_eth]
source = "chainlink:0.7-mock"
options.rate = "<%= settings.rate_eth %>"
options.timestamp = "1558469483"
options.salt = "eth"

[import.aggregator_btc]
source = "chainlink:0.7-mock"
options.rate = "<%= settings.rate_btc %>"
options.timestamp = "1558469483"
options.salt = "btc"

[run.rwaone]
exec = "./publish/cannon.js"
func = "deploy"
args = ["<%= settings.network %>"]
modified = ["contracts", "publish/src", "publish/deployed/local"]

[invoke.transfer_owner_snx]
target = ["ProxyRwaone"]

fromCall.func = "owner"
func = "transfer"
args = ["<%= settings.owner %>", "100000000000000000000000000"]

depends = ["run.rwaone"]

[invoke.set_ownership]
target = [
    "AddressResolver",
    "CircuitBreaker",
    "CollateralErc20",
    "CollateralEth",
    "CollateralManager",
    "CollateralManagerState",
    "CollateralShort",
    "DappMaintenance",
    "DebtCache",
    "DebtMigratorOnEthereum",
    "DelegateApprovals",
    "DelegateApprovalsEternalStorage",
    "Depot",
    "EtherWrapper",
    "ExchangeCircuitBreaker",
    "ExchangeRates",
    "ExchangeState",
    "Exchanger",
    "FeePool",
    "FeePoolEternalStorage",
    "Issuer",
    "Liquidator",
    "LiquidatorRewards",
    "NativeEtherWrapper",
    "OneNetAggregatorDebtRatio",
    "OneNetAggregatorIssuedTribes",
    "OwnerRelayOnEthereum",
    "ProxyFeePool",
    "ProxyRwaone",
    "ProxyrUSD",
    "ProxyrETH",
    "ProxyhBTC",
    "RewardEscrow",
    "RewardsDistribution",
    "Rwaone",
    "RwaoneBridgeEscrow",
    "RwaoneBridgeToOptimism",
    "RwaoneDebtShare",
    "RwaoneEscrow",
    "TriberUSD",
    "TriberETH",
    "TribehBTC",
    "SystemSettings",
    "SystemStatus",
    "TokenStaterUSD",
    "TokenStaterETH",
    "TokenStatehBTC",
    "TradingRewards",
    "WrapperFactory",
]

func = "nominateNewOwner"
args = ["<%= settings.owner %>"]

fromCall.func = "owner"

depends = ["run.rwaone"]


[invoke.accept_ownership]
target = [
    "AddressResolver",
    "CircuitBreaker",
    "CollateralErc20",
    "CollateralEth",
    "CollateralManager",
    "CollateralManagerState",
    "CollateralShort",
    "DappMaintenance",
    "DebtCache",
    "DebtMigratorOnEthereum",
    "DelegateApprovals",
    "DelegateApprovalsEternalStorage",
    "Depot",
    "EtherWrapper",
    "ExchangeCircuitBreaker",
    "ExchangeRates",
    "ExchangeState",
    "Exchanger",
    "FeePool",
    "FeePoolEternalStorage",
    "Issuer",
    "Liquidator",
    "LiquidatorRewards",
    "NativeEtherWrapper",
    "OneNetAggregatorDebtRatio",
    "OneNetAggregatorIssuedTribes",
    "OwnerRelayOnEthereum",
    "ProxyFeePool",
    "ProxyRwaone",
    "ProxyrUSD",
    "ProxyrETH",
    "ProxyhBTC",
    "RewardEscrow",
    "RewardsDistribution",
    "Rwaone",
    "RwaoneBridgeEscrow",
    "RwaoneBridgeToOptimism",
    "RwaoneDebtShare",
    "RwaoneEscrow",
    "TriberUSD",
    "TriberETH",
    "TribehBTC",
    "SystemSettings",
    "SystemStatus",
    "TokenStaterUSD",
    "TokenStaterETH",
    "TokenStatehBTC",
    "TradingRewards",
    "WrapperFactory",
]

from = "<%= settings.owner %>"
func = "acceptOwnership"
args = []

depends = ["invoke.set_ownership"]

[invoke.set_aggregator_snx]
target = ["ExchangeRates"]

from = "<%= settings.owner %>"
func = "addAggregator"
args = [
    "0x534e580000000000000000000000000000000000000000000000000000000000",
    "<%= imports.aggregator_snx.contracts.aggregator.address %>",
]

depends = ["invoke.accept_ownership", "import.aggregator_snx"]

[invoke.set_aggregator_eth]
target = ["ExchangeRates"]

from = "<%= settings.owner %>"
func = "addAggregator"
args = [
    "0x4554480000000000000000000000000000000000000000000000000000000000",
    "<%= imports.aggregator_eth.contracts.aggregator.address %>",
]

depends = ["invoke.accept_ownership", "import.aggregator_eth"]

[invoke.set_aggregator_btc]
target = ["ExchangeRates"]

from = "<%= settings.owner %>"
func = "addAggregator"
args = [
    "0x4254430000000000000000000000000000000000000000000000000000000000",
    "<%= imports.aggregator_btc.contracts.aggregator.address %>",
]

depends = ["invoke.accept_ownership", "import.aggregator_btc"]

[invoke.increase_snapshot_stale_time]
target = ["SystemSettings"]

from = "<%= settings.owner %>"
func = "setDebtSnapshotStaleTime"
args = ["2000000000"]

depends = ["invoke.accept_ownership"]

[invoke.increase_rate_stale_time]
target = ["SystemSettings"]

from = "<%= settings.owner %>"
func = "setRateStalePeriod"
args = ["2000000000"]

depends = ["invoke.accept_ownership"]

[invoke.snapshot]
target = ["DebtCache"]

func = "takeDebtSnapshot"

depends = ["run.rwaone"]

[invoke.test_user_snx]
target = ["ProxyRwaone"]

from = "<%= settings.owner %>"
func = "transfer"
args = ["<%= settings.test_user %>", "10000000000000000000000000"]

depends = ["invoke.transfer_owner_snx"]

[invoke.test_user_mint]
target = ["Rwaone"]

from = "<%= settings.test_user %>"
func = "issueTribes"
args = ["1000000000000000000000"]
#args = ['1']

depends = [
    "invoke.test_user_snx",
    "invoke.increase_snapshot_stale_time",
    "invoke.increase_rate_stale_time",
]
